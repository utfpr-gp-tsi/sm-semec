name: CI
on:
  push:
    branches:
      - github-actions
jobs:
  code_quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
          extensions: curl, dom, fileinfo, filter, iconv, json, libxml, mbstring, openssl, pcntl, pcre, pdo, simplexml, tokenizer, xml, xmlwriter, zip, pdo_mysql
          tools: composer:v2

      - name: Install composer dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist

      - name: Code analyse by PHPCS
        run: |
          vendor/bin/phpcs --standard=phpcs.xml ./

      - name: Code analyse by PHPMD
        run: |
          vendor/bin/phpmd app,config,resources,routes,tests ansi phpmd.xml
          php -d memory_limit=2G vendor/bin/phpstan analyse -c phpstan.neon

      - name: Code analyse by PHPSTAN
        run: |
          php -d memory_limit=3G vendor/bin/phpstan analyse -c phpstan.neon
  units:
    runs-on: ubuntu-latest
    env:
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
    services:
      db:
        image: mysql:8.0.23
        env:
          MYSQL_DATABASE: sm_semec
          MYSQL_USER: sm-semec
          MYSQL_PASSWORD: sm-semec
          MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
        ports:
          - 3306:3306
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
          extensions: curl, dom, fileinfo, filter, iconv, json, libxml, mbstring, openssl, pcntl, pcre, pdo, simplexml, tokenizer, xml, xmlwriter, zip, pdo_mysql
          tools: composer:v2

      - name: Install composer dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist

      - name: Prepare app
        run: |
          cp .env.ci .env
          php artisan key:generate
          php artisan config:clear
          php artisan route:clear
          php artisan cache:clear

      - name: Migration the database
        run: |
          mysql -h 127.0.0.1 --port 3306 -u root -e "show databases;"
          php artisan migrate
          php artisan db:seed

      - name: Migrate on test env
        run: |
          docker exec ${{ job.services.db.id }} mysql -e "GRANT ALL PRIVILEGES ON *.* TO 'sm-semec'@'%' WITH GRANT OPTION;"
          docker exec ${{ job.services.db.id }} mysql -u sm-semec -psm-semec -e "CREATE DATABASE sm_semec_test; SHOW DATABASES;"
          php artisan migrate --env=testing

      - name: Run units tests
        run: |
          php artisan test

  dusks:
    runs-on: ubuntu-latest
    services:
      webserver:
        image: nginx:alpine
        volumes:
          - /var/www/:/var/www/
          - /var/www/nginx/conf.d/dev/:/etc/nginx/conf.d/
        ports:
          - 80:80
      db:
        image: mysql:8.0.23
        env:
          MYSQL_DATABASE: sm_semec
          MYSQL_USER: sm-semec
          MYSQL_PASSWORD: sm-semec
          MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
        ports:
          - 3306:3306
      selenium:
        image: selenium/standalone-chrome-debug:latest
        ports:
          - 4444:4444
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
          extensions: curl, dom, fileinfo, filter, iconv, json, libxml, mbstring, openssl, pcntl, pcre, pdo, simplexml, tokenizer, xml, xmlwriter, zip, pdo_mysql
          tools: composer:v2

      - name: Setup php-fpm
        env:
          version: 7.4
        run: |
          sudo cp /usr/sbin/php-fpm$version /usr/bin/php-fpm
          sudo sed -i 's|listen = /run/php/php7.4-fpm.sock|listen = 0.0.0.0:9000|g' /etc/php/7.4/fpm/pool.d/www.conf
          sudo service php$version-fpm restart
          sudo service php$version-fpm status

      - name: Change hostname
        run: |
          sudo hostname app
          docker exec ${{ job.services.webserver.id }} nc -zvw10 $(hostname) 9000

      - name: Install composer dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist

      - name: Prepare the app
        run: |
          cp .env.ci .env
          php artisan key:generate
          php artisan config:clear
          php artisan route:clear
          php artisan cache:clear

      - uses: actions/setup-node@v2
        with:
          node-version: '12'

      - name: Install npm dependencies
        run: |
          npm install
          npm run production

      - name: Setup test database
        run: |
          docker exec ${{ job.services.db.id }} mysql -e "GRANT ALL PRIVILEGES ON *.* TO 'sm-semec'@'%' WITH GRANT OPTION;"
          docker exec ${{ job.services.db.id }} mysql -u sm-semec -psm-semec -e "CREATE DATABASE sm_semec_test; SHOW DATABASES;"
          php artisan migrate:fresh --env=testing
        env:
          DB_HOST: 127.0.0.1
          DB_PORT: 3306

      - name: Copy files to /var/www
        run: |
          sudo cp -arp . /var/www/
          sudo chmod -R 666 /var/www/storage
          sudo chmod -R 666 /var/www/bootstrap/cache
          docker restart ${{ job.services.webserver.id }}

      - name: Run dusk tests
        run: |
          cd /var/www
          sudo sed -i 's|DB_HOST=db|DB_HOST=127.0.0.1|g' .env.dusk.local
          php artisan dusk
        env:
          SELENIUM_HOST: 127.0.0.1

      - name: Upload screenshots
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: screenshots
          path: tests/Browser/screenshots

      - name: Upload console logs
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: console
          path: tests/Browser/console

      - name: Upload laravel logs
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: laravel-logs
          path: /var/www/storage/logs
