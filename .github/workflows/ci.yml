name: CI
on:
  push:
    branches:
      - github-actions
jobs:
  tests:
    runs-on: ubuntu-latest
    # container:
    #   image: php:7.4-fpm
    #   options: --network-alias app
    services:
      # webserver:
      #   image: nginx:alpine
      #   volumes:
      #     - /var/www:/var/www
      #     - /var/www/nginx/conf.d/dev/:/etc/nginx/conf.d/
      db:
        image: mysql:5.7.33
        env:
          MYSQL_DATABASE: sm_semec
          MYSQL_USER: sm-semec
          MYSQL_PASSWORD: sm-semec
          MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      selenium:
        image: selenium/standalone-chrome-debug:latest
        ports:
          - 4444:4444
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: DB access
        run: |
          docker ps
          docker exec ${{ job.services.db.id }} mysql -e "SHOW DATABASES;"
          # mysql -h 127.0.0.1 --port 3306 -u root -e "SHOW DATABASES;"

      # - name: Install libs
      #   run: |
      #     apt-get update
      #     apt-get -qq install -y build-essential
      #     apt-get -qq install -y libzip-dev
      #     apt-get -qq install -y zip
      #     apt-get -qq install -y libpng-dev
      #     apt-get -qq install -y libpng-dev
      #     apt-get -qq install -y libjpeg62-turbo-dev
      #     apt-get -qq install -y libfreetype6-dev
      #     apt-get -qq install -y libonig-dev
      #     apt-get -qq install -y default-mysql-client
      #     apt-get -qq install -y locales
      #
      #     docker-php-ext-install pdo_mysql zip exif pcntl
      #     docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/include/
      #     docker-php-ext-install gd
      #     #
      #     curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
      #     # apt-get update
      #     # apt-get install -y sudo
      #
      # # - name: Setup PHP
      # #   uses: shivammathur/setup-php@v2
      # #   with:
      # #     php-version: 7.4
      # #     extensions: curl, dom, fileinfo, filter, iconv, json, libxml, mbstring, openssl, pcntl, pcre, pdo, simplexml, tokenizer, xml, xmlwriter, zip, pdo_mysql
      # # - name: Install dependencies
      # #   uses: php-actions/composer@v5
      # #   with:
      # #     dev: no
      # #     args: --profile --ignore-platform-reqs
      #
      # - name: Install Dependencies
      #   run: |
      #     rm composer.lock
      #     composer install
      #     # composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist
      #
      # - name: Prepare app
      #   run: |
      #     cp .env.ci .env
      #     php artisan key:generate
      #     php artisan config:clear
      #     php artisan route:clear
      #     php artisan cache:clear
      #
      # - uses: actions/setup-node@v1
      #   with:
      #     node-version: '12'
      #
      # - name: Install npm dependencies
      #   run: |
      #     npm install
      #     npm run production
      #
      # - name: Copy files to /var/www
      #   run: |
      #     cp -ar . /var/www/
      #     ls -la /var/www
      #
      # - name: Create test database
      #   run: |
      #     mysql -h db --port 3306 -u root -e "GRANT ALL PRIVILEGES ON *.* TO 'sm-semec'@'%' WITH GRANT OPTION;"
      #     mysql -h db --port 3306 -u sm-semec -psm-semec -e "CREATE DATABASE sm_semec_test; SHOW DATABASES;"
      #     php artisan migrate:fresh --env=testing
      #
      # - name: Run dusk tests
      #   run: |
      #     php artisan dusk tests/Browser/Admin/UnitCategories/CreateTest.php

      # - name: Run migration
      #   run: |
      #     mysql -h 127.0.0.1 --port 3306 -u root -e "show databases;"
      #     php artisan migrate
      #     php artisan db:seed
      #   env:
      #     DB_HOST: 127.0.0.1
      #     DB_PORT: 3306
      # # - name: Access
      # #   run: |
      # #     curl webserver
      # # - name: Code analyse
      # #   run: |
      # #     vendor/bin/phpcs --standard=phpcs.xml ./
      # #     vendor/bin/phpmd app,config,resources,routes,tests ansi phpmd.xml
      # #     php -d memory_limit=2G vendor/bin/phpstan analyse -c phpstan.neon
      # - name: Migrate on test
      #   run: |
      #     mysql -h 127.0.0.1 --port 3306 -u root -e "GRANT ALL PRIVILEGES ON *.* TO 'sm-semec'@'%' WITH GRANT OPTION;"
      #     mysql -h 127.0.0.1 --port 3306 -u sm-semec -psm-semec -e "CREATE DATABASE sm_semec_test; SHOW DATABASES;"
      #     php artisan migrate:fresh --env=testing
      #     # php artisan test
      #   env:
      #     DB_HOST: 127.0.0.1
      #     DB_PORT: 3306
      # - uses: actions/setup-node@v1
      #   with:
      #     node-version: '12'
      # - name: Migrate on test
      #   run: |
      #     npm install
      #     npm run production
      #     php artisan config:clear
      #     php artisan cache:clear
      #     php artisan serve &
      #     php artisan dusk tests/Browser/Admin/UnitCategories/CreateTest.php
      #   env:
      #     DB_HOST: 127.0.0.1
      #     DB_PORT: 3306
      #     APP_URL: http://git.workflows.live:8000
